const id = "configmaps_posseduti.md";
						const collection = "post";
						const slug = "configmaps_posseduti";
						const body = "\n## Provisioning delle dashboard di Grafana\n\nHo dovuto aggiornare una installazione di Grafana deployata su K8s utilizzando Helm modificando la struttura di alcune dashboard, eliminandone alcune e creandone di nuove ma ho incontrato un problema piuttosto frustrante: ogni volta che aggiornavo Grafana,\nle vecchie dashboard venivano ricreate automaticamente.\n\n## Un paio di informazioni preliminari\n\nIstanza di Grafana deployata su K8s utilizzando Helm con il provisioning delle dashboard caricate da files locali in modo che tutte le modifiche siano tracciate su un repository git e soprattuto riproducibili su ambienti diversi usando una pipeline bash.\n\nGrafana è configurato con un sidecar che monitor le dashboard definite in specifici ConfigMap. Ogni volta che eseguivo un aggiornamento di Grafana tramite Helm, mi ritrovavo con le vecchie dashboard che venivano ripristinate anche se non esistevano piu fisicamente nel mio repository.\n\nTra queste dashboard c'erano alcune che avevo già eliminato e alcune che invece cercavo di eliminare con l'attività di oggi.\nQuesto mi creava abbastanza confusione perchè mi aspettavo che quello che doveva essere cancellato venisse cancellato e non ricomparisse.\n\nInoltre, dato che stavo cercando di fare un deploy con provisioning di Grafana non era possibile cancellare le dashboard dall UI di Grafana.\n\n## Piano A\n\nIl primo passo è stato capire da dove provenissero queste vecchie dashboard.\n\nAvevo aggiornato i miei file di configurazione per rimuovere le vecchie dashboard, ma il problema persisteva.\n\nAccedo direttamente al pod e nella folder `/tmp/dashboard` anche se cancello i files delle dashboard dopo 30 secondi si ricreano in automatico.\n\nQuesto mi ha portato a considerare che la causa potesse risiedere nei ConfigMap che il sidecar di Grafana stava monitorando.\n\nQuindi veloce ricerca su [Google](https://letmegooglethat.com/?q=delete+provisioned+grafana+dashboard+on+k8s) portava un sacco di risultati anche poco incoraggianti dato che sembra non possibile cancellare le dashboard se non si cancellano fisicamente i file dalla macchine e se non si agisce a mano sul database sqlite, cosa che tra l'altro non potevo fare poichè il pod k8s non aveva la possibilità di installare alcun pacchetto esterno.\n\nHo anche provato a compilare sqlite direttamente sul pod scoprendo altri nuovi problemi da risolvere e spendendo energie nella risoluzione di un problema che non dovevo risolvere.\n\nArriva il momento del piano B\n\n## Piano B\n\n15 minuti di pausa dalla scrivania, un pò di merenda e arriva l'illuminazione per il piano C\n\n## Piano C\n\nSe vengono ricreate le dashboard da qualche parte devono essere salvate.\n\nMi sono assicurato che il volume del pod fosse vergine e che non si portasse dietro nessun dato preesistente.\nQuindi l'ho cancellato e forzato K8s a creane uno nuovo.\n\nIl problema si ripresenta.\n\nOttimo, se k8s non storicizza le dashboard sul disco fisico dove storicizza i configmap? Torniamo sulla doc https://kubernetes.io/docs/concepts/configuration/configmap/ ed ecco il comando che cercavo\n\n```bash\nkubectl get configmaps\n```\n\nBingo! per qualche motivo li c'erano tutte le dashboard che cercavo e che volevo eliminare definitivamente.\nFacciamo pulizia con un paio di copia incolla e ripartiamo da zero\n\n```bash\nkubectl delete configmap <name>\n```\n\n## Deploy delle nuove dashboard\n\nHo atteso qualche minuto per vedere se le dashboard venissero ricreate ma niente è ricomparso.\n\nPossiamo procedere con l'applicazione delle nuove dashboard che avevo già preparato\n\n```bash\nhelm upgrade grafana grafana/grafana -f values.yaml\n```\n\nDashboard operative, ambiente allineato alla struttura del repository e passi riproducibili con un paio di comandi.\n\nProssima settimana si farà la stessa cosa anche per gli alerts.\n";
						const data = {title:"Grafana provisioning e i configmaps posseduti",description:"Un piccolo racconto di dashboard Grafana che continuavano ad apparire anche se non dovevano",publishDate:new Date(1719612000000),updatedDate:new Date(1719612000000),draft:false,tags:["grafana","k8s","helm"]};
						const _internal = {
							type: 'content',
							filePath: "/media/io/Dati/linux/ophusdev-blog/src/content/post/configmaps_posseduti.md",
							rawData: "\ntitle: \"Grafana provisioning e i configmaps posseduti\"\ndescription: \"Un piccolo racconto di dashboard Grafana che continuavano ad apparire anche se non dovevano\"\npublishDate: \"29 June 2024\"\nupdatedDate: 29 June 2024\ntags: [\"grafana\", \"k8s\", \"helm\"]",
						};

export { _internal, body, collection, data, id, slug };
